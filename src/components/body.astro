---

---

<main class=" ">
    <section class="p-12  mx-auto max-w-6xl h-[87vh]  flex flex-col justify-between">
        <div class="flex flex-col flex-1 items-start">
            <!-- HERO -->
            <div class="text-3xl font-semibold flex-1 flex  items-end justify-end pr-4">I am a</div>
            <div class="py-4 text-6xl font-monospace font-extrabold flex items-center justify-end pr-4">
                
                
            <span id="typewriter"></span><span id="cursor">|</span></div>

            <div class="flex-1 flex text-3xl font-semibold items-top justify-end pr-4">that builds solid web experiences and
                applications with modern technologies</div>
        </div>
        <!-- CALL TO ACTION -->
        <div class="text-right p-4">
            <button class="bg-purple-600 text-white py-2 px-4 rounded hover:bg-purple-700 transition duration-300">
                Call to Action
            </button>
        </div>
    </section>
    <section class="">
        <!-- Picture and Glasmorphism -->

        <div class="h-[65vh] flex container-02 overflow-hidden ">
                <div class=" flex glassmorphims justify-center items-center ">
                    <img src="/public/profile.png" alt="Profile picture" class=" rounded-3xl scale-75 max-w-4xl efeito ">
                
                </div>
                
        </div>
        
    </section>
    <section id="projects" class="my-8">
      <h2 class="text-5xl py-4 font-black  font-poppins text-center mb-4">Projects</h2>
      <div class="grid grid-cols-1 gap-8 p-16">
        <!-- Project 1 -->
        <div class="efeito mx-auto max-w-[70vw] bg-secondary p-4 rounded-lg shadow-lg backdrop-blur-lg bg-opacity-30 flex flex-col md:flex-row">
          <div>
              <h3 class="text-5xl font-semibold p-6"  >d'accord</h3>
              <p class="text-3xl px-6">Consensus-Based Web App lies the belief in fostering collaboration and inclusivity. Committed to providing an intuitive and engaging platform that encourages users to participate actively in polls, express their opinions, and contribute to collective decision-making.
        Developed with Next.js, React, and Typescript, providing a seamless user experience and top-notch performance. With the power of React Query, data is fetched and managed efficiently, ensuring real-time updates and smooth interactions. The use of PostgreSQL and Prisma guarantees a robust and secure database to handle user information and poll data. Tailwind CSS and Storybook </p>
        <div class="mt-4 space-x-2">
            <button class="text-3xl bg-white/30 backdrop-blur-md hover:bg-white/50 text-black py-2 px-4 rounded-lg shadow-lg transition duration-300 ease-in-out">
              </> Code
            </button>
            <button class="text-3xl bg-white/30 backdrop-blur-md hover:bg-white/50 text-black py-2 px-4 rounded-lg shadow-lg transition duration-300 ease-in-out">
              Preview
            </button>
          </div>
         
</div>
<img src="/public/discord.png" alt="" class="sm:p-16 object-contain h-auto w-full max-w-full">
        </div>
        <!-- Project 2 -->
        <div class="efeito mx-auto max-w-[70vw] bg-secondary p-4 rounded-lg shadow-lg backdrop-blur-lg bg-opacity-30 flex flex-col  md:flex-row items-center gap-4">
            <img src="/public/cine.png" alt="" class="sm:p-12 object-contain h-auto w-full max-w-full">
            <div>
              <h3 class="text-5xl text-right font-semibold p-6  ">Cinescape</h3>
              <p class="text-3xl text-right px-6">Cinescape is a cinema booking app, meticulously developed using a stack of cutting-edge technologies such as Vite, React, Git, React Router, React Query, TypeScript, Express.js, Prisma, PostgreSQL, and Tailwind CSS. This project boasts an array of impressive features, including a comprehensive movie and user database, seamlessly integrated with TMDb API. The user-friendly UI components enhance the overall experience, while the bookmarking feature enables users to keep track of their favorite movies. Additionally, the app offers a genre-based sorting system, allowing users to easily discover films of their interest. The highlight of Cinescape is its intuitive seat selection and booking system, making it a must-have addition to any cinephile's website.</p>
              <div class="mt-4 space-x-2">
                <button class="text-3xl bg-white/30 backdrop-blur-md hover:bg-white/50 text-black py-2 px-4 rounded-lg shadow-lg transition duration-300 ease-in-out">
                  </> Code
                </button>
                <button class="text-3xl bg-white/30 backdrop-blur-md hover:bg-white/50 text-black py-2 px-4 rounded-lg shadow-lg transition duration-300 ease-in-out">
                  Preview
                </button>
              </div>
            </div>
          </div>
      </div>
    </section>
    <section id="about" class="efeito my-8">
     
      <div class="flex">
        <img src="/public/corpo.jpg " class="w-1/2 " alt="">
        <div class=" efeito grid p-6 container-02 overflow-hidden text-white">
            <div class="p-12 rounded-3xl glassmorphims">
            <h2 class="efeito text-5xl py-4 font-black  font-poppins text-center mb-4">Who am I?</h2>
            <p class="efeito text-center text-3xl px-8" >Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore v modo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
            </div>
        </div>
      </div>
    </section>
    <section id="contact" class="efeito my-8">
      <h2 class="text-5xl py-4 font-black  font-poppins text-center mb-4">Let's connect</h2>
      <div class="max-w-sm mx-auto bg-white rounded-lg shadow-md overflow-hidden">
        <div class="px-6 py-4">
          <div class="font-bold text-xl mb-2">Contact Me</div>
          <p class="text-gray-700 text-base">
            Feel free to drop me a line. I'll get back to you as soon as I can!
          </p>
        </div>
        <div class="px-6 pt-4 pb-2">
          <form action="mailto:mateusmorgado@hotmail.com" method="post" enctype="text/plain">
            <input type="text" name="name" placeholder="Your Name" class="mb-4 px-3 py-2 border rounded-lg text-gray-700 focus:outline-none focus:shadow-outline w-full" required>
            <input type="email" name="email" placeholder="Your Email" class="mb-4 px-3 py-2 border rounded-lg text-gray-700 focus:outline-none focus:shadow-outline w-full" required>
            <textarea name="message" placeholder="Your Message" class="mb-4 px-3 py-2 border rounded-lg text-gray-700 focus:outline-none focus:shadow-outline w-full" required></textarea>
            <button type="submit" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-700">Send Email</button>
          </form>
        </div>
      </div>
      
    </section>
    <script>
        
        // Typewriter effect
        function sleep(ms) {
          return new Promise(resolve => setTimeout(resolve, ms));
        }
        const phrases = ["Fullstack Developer,", 'Web Designer,', 'Cloud Developer,', 'Tech Enthusiast,'];
        const el = document.getElementById('typewriter');
        
        let sleepTime = 100;

        let curPhraseIndex = 0;

        const writeLoop = async () =>{
            while (true){
                let curWord = phrases[curPhraseIndex];
    
                for (let i = 0; i < curWord.length; i++){
                    el.innerText = curWord.substring(0, i+1);
                    await sleep(sleepTime);
                    
                }

                await sleep(sleepTime * 13);

                for (let i = curWord.length; i > 0; i--){
                    el.innerText = curWord.substring(0, i-1);
                    await sleep(sleepTime / 4.5);
                }
                await sleep(sleepTime * 7);

                if (curPhraseIndex === phrases.length - 1){
                    curPhraseIndex = 0;
                } else {
                    curPhraseIndex++;
                }
            }
        }
writeLoop();
//animate what has the class hidden to show while scrolling
const observer = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    const hiddenElement = entry.target;
    if (entry.isIntersecting) {
     entry.target.classList.add('show');
    }
  });
});
const hiddenElements = document.querySelectorAll('.efeito');
hiddenElements.forEach((el) => observer.observe(el));
    </script>
  </main>
  